{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport getPlan from '../../lib/dependencies';\nimport { ArgumentError } from '../../lib/domain';\nexport default (function _callee(req, res) {\n  var result;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getPlan.execute({\n            id: req.params.id\n          }));\n\n        case 3:\n          result = _context.sent;\n          res.status(200).json(result);\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n\n          if (!(_context.t0 instanceof ArgumentError)) {\n            _context.next = 11;\n            break;\n          }\n\n          return _context.abrupt(\"return\", res.status(400).json({\n            error: \"could not get plan\"\n          }));\n\n        case 11:\n          res.status(500).json({\n            error: \"could not get plan with id=\".concat(req.params.id)\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n});","map":null,"metadata":{},"sourceType":"module"}