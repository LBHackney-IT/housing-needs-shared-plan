{"ast":null,"code":"import { nanoid } from 'nanoid';\nimport { ArgumentError, Plan } from '../domain';\nexport default class PlanGateway {\n  constructor({\n    client\n  }) {\n    this.client = client;\n    this.tableName = 'plans';\n  }\n\n  async create({\n    firstName,\n    lastName\n  }) {\n    if (!firstName) throw new ArgumentError('first name cannot be null.');\n    if (!lastName) throw new ArgumentError('last name cannot be null.');\n    const id = nanoid(20);\n    const request = {\n      TableName: this.tableName,\n      Item: {\n        id,\n        created: new Date(Date.now()).toISOString(),\n        firstName,\n        lastName\n      }\n    };\n    const result = await this.client.put(request).promise();\n    return new Plan(result.Items[0]);\n  }\n\n  async get({\n    id\n  }) {\n    if (!id) throw new ArgumentError('id cannot be null.');\n    const request = {\n      TableName: this.tableName,\n      KeyConditionExpression: 'id = :id',\n      ExpressionAttributeValues: {\n        ':id': id\n      }\n    };\n    const result = await this.client.query(request).promise();\n    if (result.Items.length === 0) return null;\n    return new Plan(result.Items[0]);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}