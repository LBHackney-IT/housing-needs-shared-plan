version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.0.0

executors:
  unit-test:
    docker:
      - image: circleci/node:12.13
    working_directory: ~/repo
  integration-test:
    docker:
      - image: circleci/node:12.13-browsers
      - image: circleci/dynamodb
        entrypoint: ['java', '-Xmx1G', '-jar', 'DynamoDBLocal.jar', '-sharedDb']
    working_directory: ~/repo

jobs:
  install-dependencies-and-unit-tests:
    executor: unit-test

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: CYPRESS_CACHE_FOLDER=~/repo/cypress_cache yarn

      - run:
          name: Build the application
          command: |
            export NEXT_PUBLIC_API_URL=http://localhost:3000/api
            yarn build

      - run:
          name: Run unit tests
          command: yarn run unit-test

      - run:
          name: Run linting
          command: yarn lint

      - persist_to_workspace:
          root: ~/repo
          paths: .

  run-integration-tests:
    executor: integration-test

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/repo

      - aws-cli/setup:
          aws-access-key-id: CYPRESS_AWS_ACCESS_KEY_ID
          aws-secret-access-key: CYPRESS_AWS_SECRET_ACCESS_KEY
          aws-region: CYPRESS_AWS_REGION

      - run:
          name: Create local DynamoDB plans table
          command: aws dynamodb create-table --cli-input-json file://./config/tables/plans.json --endpoint-url http://localhost:8000 > /dev/null

      - run:
          name: Run integration tests
          command: |
            export NEXT_PUBLIC_GTM_ID=
            export NEXT_PUBLIC_API_URL=http://localhost:3000/api
            export SMS_API_URL=http://localhost:8080
            export PLANS_TABLE_NAME=plans
            CYPRESS_CACHE_FOLDER=~/repo/cypress_cache yarn run int-test

      - store_artifacts:
          path: ~/repo/cypress/screenshots

      - store_artifacts:
          path: ~/repo/cypress/videos

      - persist_to_workspace:
          root: ~/repo
          paths: .

  deploy:
    executor: aws-cli/default
    working_directory: ~/repo
    parameters:
      stage_name:
        type: string
      API_URL:
        type: string
      GTM_ID:
        type: string
    steps:
      - attach_workspace:
          at: ~/repo
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      - run:
          name: deploy
          command: |
            export NEXT_PUBLIC_API_URL=<< parameters.API_URL >>
            export NEXT_PUBLIC_GTM_ID=<< parameters.GTM_ID >>
            cd ../repo
            yarn build
            yarn --production=true
            sudo npm i -g serverless
            sls deploy -s << parameters.stage_name >>

workflows:
  version: 2
  continuous-delivery:
    jobs:
      - install-dependencies-and-unit-tests
      - run-integration-tests:
          requires:
            - install-dependencies-and-unit-tests
      - deploy:
          name: deploy-staging
          stage_name: staging
          API_URL: ${NEXT_PUBLIC_API_URL_STAGING}
          GTM_ID: ${NEXT_PUBLIC_GTM_ID}
          filters:
            branches:
              only: master
          requires:
            - run-integration-tests
      - permit-deploy-production:
          type: approval
          requires:
            - deploy-staging
      - deploy:
          name: deploy-production
          stage_name: production
          API_URL: ${NEXT_PUBLIC_API_URL_PRODUCTION}
          GTM_ID: ${NEXT_PUBLIC_GTM_ID}
          requires:
            - permit-deploy-production
