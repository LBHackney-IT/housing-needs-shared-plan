version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.0.0

executors:
  my-executor:
    docker:
      - image: circleci/node:12.9.1-browsers

    working_directory: ~/repo

jobs:
  install-dependencies-and-test:
    executor: my-executor

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: CYPRESS_CACHE_FOLDER=~/repo/cypress_cache yarn install

      - run:
          name: Build
          command: yarn build

      - run:
          name: Run integration tests
          command: CYPRESS_CACHE_FOLDER=~/repo/cypress_cache yarn run int-test

      - store_artifacts:
          path: ~/repo/cypress/screenshots

      - store_artifacts:
          path: ~/repo/cypress/videos

      - persist_to_workspace:
          root: ~/repo
          paths: .

  build-deploy-staging:
    executor: aws-cli/default

    steps:
      - attach_workspace:
          at: ~/repo

      - aws-cli/install

      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION

      - run:
          name: deploy
          command: |
            echo "staging deploy"
            pwd
            cd ..
            cd repo
            echo '---------'
            ./node_modules/serverless/bin/serverless

  build-deploy-production:
    executor: aws-cli/default

    steps:
      - attach_workspace:
          at: ~/repo

      - aws-cli/install

      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION

      - run:
          name: deploy
          command: |
            echo "production deploy"
            pwd
            cd ..
            cd repo
            echo '---------'
            ./node_modules/serverless/bin/serverless

workflows:
  version: 2
  continuous-delivery:
    jobs:
      - install-dependencies-and-test
      - build-deploy-staging:
          requires:
            - install-dependencies-and-test
          filters:
            branches:
              only:
                - master
      - permit-deploy-production:
          type: approval
          requires:
            - build-deploy-staging
      - build-deploy-production:
          requires:
            - permit-deploy-production
