service: hn-shared-plan

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  stage: ${opt:stage}

plugins:
  - serverless-offline

package:
  individually: true
  exclude:
    - ./**

functions:
  hn-shared-plan:
    name: hn-shared-plan-${self:provider.stage}
    handler: lambda.handler
    package:
      include:
        - lambda.js
        - next.config.js
        - lib/**
        - pages/**
        - build/_next/**
        - node_modules/**

    events:
      - http:
          path: api/{proxy+}
          method: ANY
          authorizer: ${self:custom.authorizer.hn-shared-plan-authorizer}
      - http: ANY /
      - http: ANY /{proxy+}

    environment:
      ENV: ${self:provider.stage}
      allowedGroups: 'housingneeds-singleview-beta'

  hn-shared-plan-authorizer:
    name: hn-shared-plan-authorizer-${self:provider.stage}
    handler: authorizer.handler
    package:
      include:
        - authorizer.js
        - node_modules/**

    environment:
      jwtsecret: ${ssm:/common/hackney-jwt-secret}
      allowedGroups: 'housingneeds-singleview-beta'

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

custom:
  stage: ${self:provider.stage}
  authorizer:
    hn-shared-plan-authorizer:
      name: hn-shared-plan-authorizer
      type: request
      identitySource: ''
      resultTtlInSeconds: 0
